package com.siu.android.dondusang.dao.model;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.siu.android.dondusang.dao.model.Center;
import com.siu.android.dondusang.dao.model.News;
import com.siu.android.dondusang.dao.model.BloodEvent;

import com.siu.android.dondusang.dao.model.CenterDao;
import com.siu.android.dondusang.dao.model.NewsDao;
import com.siu.android.dondusang.dao.model.BloodEventDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig centerDaoConfig;
    private final DaoConfig newsDaoConfig;
    private final DaoConfig bloodEventDaoConfig;

    private final CenterDao centerDao;
    private final NewsDao newsDao;
    private final BloodEventDao bloodEventDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        centerDaoConfig = daoConfigMap.get(CenterDao.class).clone();
        centerDaoConfig.initIdentityScope(type);

        newsDaoConfig = daoConfigMap.get(NewsDao.class).clone();
        newsDaoConfig.initIdentityScope(type);

        bloodEventDaoConfig = daoConfigMap.get(BloodEventDao.class).clone();
        bloodEventDaoConfig.initIdentityScope(type);

        centerDao = new CenterDao(centerDaoConfig, this);
        newsDao = new NewsDao(newsDaoConfig, this);
        bloodEventDao = new BloodEventDao(bloodEventDaoConfig, this);

        registerDao(Center.class, centerDao);
        registerDao(News.class, newsDao);
        registerDao(BloodEvent.class, bloodEventDao);
    }
    
    public void clear() {
        centerDaoConfig.getIdentityScope().clear();
        newsDaoConfig.getIdentityScope().clear();
        bloodEventDaoConfig.getIdentityScope().clear();
    }

    public CenterDao getCenterDao() {
        return centerDao;
    }

    public NewsDao getNewsDao() {
        return newsDao;
    }

    public BloodEventDao getBloodEventDao() {
        return bloodEventDao;
    }

}
